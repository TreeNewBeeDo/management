<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.ProductViewMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.ProductView" >
    <result column="category_name" property="categoryName" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="factory" property="factory" jdbcType="VARCHAR" />
    <result column="sales" property="sales" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_effective" property="isEffective" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    category_name, product_id, category_id, product_name, price, count, image, date, 
    factory, sales, status, is_effective, remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.model.ProductViewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product_view
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.model.ProductViewExample" >
    delete from product_view
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.ProductView" >
    insert into product_view (category_name, product_id, category_id, 
      product_name, price, count, 
      image, date, factory, 
      sales, status, is_effective, 
      remarks)
    values (#{categoryName,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
      #{productName,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{count,jdbcType=INTEGER}, 
      #{image,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{factory,jdbcType=VARCHAR}, 
      #{sales,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{isEffective,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.ProductView" >
    insert into product_view
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="categoryName != null" >
        category_name,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="factory != null" >
        factory,
      </if>
      <if test="sales != null" >
        sales,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isEffective != null" >
        is_effective,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="categoryName != null" >
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="factory != null" >
        #{factory,jdbcType=VARCHAR},
      </if>
      <if test="sales != null" >
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isEffective != null" >
        #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.ProductViewExample" resultType="java.lang.Integer" >
    select count(*) from product_view
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product_view
    <set >
      <if test="record.categoryName != null" >
        category_name = #{record.categoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.factory != null" >
        factory = #{record.factory,jdbcType=VARCHAR},
      </if>
      <if test="record.sales != null" >
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isEffective != null" >
        is_effective = #{record.isEffective,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product_view
    set category_name = #{record.categoryName,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      count = #{record.count,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      factory = #{record.factory,jdbcType=VARCHAR},
      sales = #{record.sales,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      is_effective = #{record.isEffective,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>