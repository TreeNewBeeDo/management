<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.SalaryMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Salary">
    <id column="salary_id" jdbcType="INTEGER" property="salaryId" />
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="base_pay" jdbcType="VARCHAR" property="basePay" />
    <result column="attendance" jdbcType="VARCHAR" property="attendance" />
    <result column="prize" jdbcType="VARCHAR" property="prize" />
    <result column="overtime" jdbcType="VARCHAR" property="overtime" />
    <result column="total" jdbcType="VARCHAR" property="total" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    salary_id, employee_id, base_pay, attendance, prize, overtime, total, create_time, 
    update_time, create_by, update_by, remark
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.SalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.example.demo.model.SalaryKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.model.SalaryKey">
    delete from salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.SalaryExample">
    delete from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Salary">
    insert into salary (salary_id, employee_id, base_pay, 
      attendance, prize, overtime, 
      total, create_time, update_time, 
      create_by, update_by, remark
      )
    values (#{salaryId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{basePay,jdbcType=VARCHAR}, 
      #{attendance,jdbcType=VARCHAR}, #{prize,jdbcType=VARCHAR}, #{overtime,jdbcType=VARCHAR}, 
      #{total,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Salary">
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        salary_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="basePay != null">
        base_pay,
      </if>
      <if test="attendance != null">
        attendance,
      </if>
      <if test="prize != null">
        prize,
      </if>
      <if test="overtime != null">
        overtime,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        #{salaryId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="basePay != null">
        #{basePay,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="prize != null">
        #{prize,jdbcType=VARCHAR},
      </if>
      <if test="overtime != null">
        #{overtime,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.SalaryExample" resultType="java.lang.Integer">
    select count(*) from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update salary
    <set>
      <if test="record.salaryId != null">
        salary_id = #{record.salaryId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.basePay != null">
        base_pay = #{record.basePay,jdbcType=VARCHAR},
      </if>
      <if test="record.attendance != null">
        attendance = #{record.attendance,jdbcType=VARCHAR},
      </if>
      <if test="record.prize != null">
        prize = #{record.prize,jdbcType=VARCHAR},
      </if>
      <if test="record.overtime != null">
        overtime = #{record.overtime,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update salary
    set salary_id = #{record.salaryId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      base_pay = #{record.basePay,jdbcType=VARCHAR},
      attendance = #{record.attendance,jdbcType=VARCHAR},
      prize = #{record.prize,jdbcType=VARCHAR},
      overtime = #{record.overtime,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Salary">
    update salary
    <set>
      <if test="basePay != null">
        base_pay = #{basePay,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        attendance = #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="prize != null">
        prize = #{prize,jdbcType=VARCHAR},
      </if>
      <if test="overtime != null">
        overtime = #{overtime,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Salary">
    update salary
    set base_pay = #{basePay,jdbcType=VARCHAR},
      attendance = #{attendance,jdbcType=VARCHAR},
      prize = #{prize,jdbcType=VARCHAR},
      overtime = #{overtime,jdbcType=VARCHAR},
      total = #{total,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.model.Salary">
    <id column="salary_id" jdbcType="INTEGER" property="salaryId" />
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="base_pay" jdbcType="VARCHAR" property="basePay" />
    <result column="attendance" jdbcType="VARCHAR" property="attendance" />
    <result column="prize" jdbcType="VARCHAR" property="prize" />
    <result column="overtime" jdbcType="VARCHAR" property="overtime" />
    <result column="total" jdbcType="VARCHAR" property="total" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    salary_id, employee_id, base_pay, attendance, prize, overtime, total, create_time, 
    update_time, create_by, update_by, remark
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.SalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.example.demo.model.SalaryKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.model.SalaryKey">
    delete from salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.SalaryExample">
    delete from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Salary">
    insert into salary (salary_id, employee_id, base_pay, 
      attendance, prize, overtime, 
      total, create_time, update_time, 
      create_by, update_by, remark
      )
    values (#{salaryId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{basePay,jdbcType=VARCHAR}, 
      #{attendance,jdbcType=VARCHAR}, #{prize,jdbcType=VARCHAR}, #{overtime,jdbcType=VARCHAR}, 
      #{total,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Salary">
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        salary_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="basePay != null">
        base_pay,
      </if>
      <if test="attendance != null">
        attendance,
      </if>
      <if test="prize != null">
        prize,
      </if>
      <if test="overtime != null">
        overtime,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        #{salaryId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="basePay != null">
        #{basePay,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="prize != null">
        #{prize,jdbcType=VARCHAR},
      </if>
      <if test="overtime != null">
        #{overtime,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.SalaryExample" resultType="java.lang.Integer">
    select count(*) from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update salary
    <set>
      <if test="record.salaryId != null">
        salary_id = #{record.salaryId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.basePay != null">
        base_pay = #{record.basePay,jdbcType=VARCHAR},
      </if>
      <if test="record.attendance != null">
        attendance = #{record.attendance,jdbcType=VARCHAR},
      </if>
      <if test="record.prize != null">
        prize = #{record.prize,jdbcType=VARCHAR},
      </if>
      <if test="record.overtime != null">
        overtime = #{record.overtime,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update salary
    set salary_id = #{record.salaryId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      base_pay = #{record.basePay,jdbcType=VARCHAR},
      attendance = #{record.attendance,jdbcType=VARCHAR},
      prize = #{record.prize,jdbcType=VARCHAR},
      overtime = #{record.overtime,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Salary">
    update salary
    <set>
      <if test="basePay != null">
        base_pay = #{basePay,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        attendance = #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="prize != null">
        prize = #{prize,jdbcType=VARCHAR},
      </if>
      <if test="overtime != null">
        overtime = #{overtime,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Salary">
    update salary
    set base_pay = #{basePay,jdbcType=VARCHAR},
      attendance = #{attendance,jdbcType=VARCHAR},
      prize = #{prize,jdbcType=VARCHAR},
      overtime = #{overtime,jdbcType=VARCHAR},
      total = #{total,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.model.Salary">
    <id column="salary_id" jdbcType="INTEGER" property="salaryId" />
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="base_pay" jdbcType="VARCHAR" property="basePay" />
    <result column="attendance" jdbcType="VARCHAR" property="attendance" />
    <result column="prize" jdbcType="VARCHAR" property="prize" />
    <result column="overtime" jdbcType="VARCHAR" property="overtime" />
    <result column="total" jdbcType="VARCHAR" property="total" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    salary_id, employee_id, base_pay, attendance, prize, overtime, total, create_time, 
    update_time, create_by, update_by, remark
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.SalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.example.demo.model.SalaryKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.model.SalaryKey">
    delete from salary
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.model.SalaryExample">
    delete from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Salary">
    insert into salary (salary_id, employee_id, base_pay, 
      attendance, prize, overtime, 
      total, create_time, update_time, 
      create_by, update_by, remark
      )
    values (#{salaryId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{basePay,jdbcType=VARCHAR}, 
      #{attendance,jdbcType=VARCHAR}, #{prize,jdbcType=VARCHAR}, #{overtime,jdbcType=VARCHAR}, 
      #{total,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Salary">
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        salary_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="basePay != null">
        base_pay,
      </if>
      <if test="attendance != null">
        attendance,
      </if>
      <if test="prize != null">
        prize,
      </if>
      <if test="overtime != null">
        overtime,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salaryId != null">
        #{salaryId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="basePay != null">
        #{basePay,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="prize != null">
        #{prize,jdbcType=VARCHAR},
      </if>
      <if test="overtime != null">
        #{overtime,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.SalaryExample" resultType="java.lang.Integer">
    select count(*) from salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update salary
    <set>
      <if test="record.salaryId != null">
        salary_id = #{record.salaryId,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.basePay != null">
        base_pay = #{record.basePay,jdbcType=VARCHAR},
      </if>
      <if test="record.attendance != null">
        attendance = #{record.attendance,jdbcType=VARCHAR},
      </if>
      <if test="record.prize != null">
        prize = #{record.prize,jdbcType=VARCHAR},
      </if>
      <if test="record.overtime != null">
        overtime = #{record.overtime,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update salary
    set salary_id = #{record.salaryId,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      base_pay = #{record.basePay,jdbcType=VARCHAR},
      attendance = #{record.attendance,jdbcType=VARCHAR},
      prize = #{record.prize,jdbcType=VARCHAR},
      overtime = #{record.overtime,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Salary">
    update salary
    <set>
      <if test="basePay != null">
        base_pay = #{basePay,jdbcType=VARCHAR},
      </if>
      <if test="attendance != null">
        attendance = #{attendance,jdbcType=VARCHAR},
      </if>
      <if test="prize != null">
        prize = #{prize,jdbcType=VARCHAR},
      </if>
      <if test="overtime != null">
        overtime = #{overtime,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Salary">
    update salary
    set base_pay = #{basePay,jdbcType=VARCHAR},
      attendance = #{attendance,jdbcType=VARCHAR},
      prize = #{prize,jdbcType=VARCHAR},
      overtime = #{overtime,jdbcType=VARCHAR},
      total = #{total,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where salary_id = #{salaryId,jdbcType=INTEGER}
      and employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
</mapper>